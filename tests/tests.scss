@use "sass:map";
@use '../src/css/core';
@import 'api/api';

@include _test('[function] size-prefix()') {
  @include _assert-equals('-', core.size-prefix('sm'));
  @include _assert-equals('--md', core.size-prefix('md'));
  @include _assert-equals('--lg', core.size-prefix('lg'));
  @include _assert-equals('--xl', core.size-prefix('xl'));
}

@include _test('[function] gcd()') {
  @include _assert-equals(2, core.gcd(2, 12));
  @include _assert-equals(4, core.gcd(4, 12));
  @include _assert-equals(1, core.gcd(1, 12));
  @include _assert-equals(1, core.gcd(5, 12));
}

@include _test('[function] strip-unit()') {
  @include _assert-equals(1, core.strip-unit(1rem));
  @include _assert-equals(10, core.strip-unit(10px));
}

@include _test('[function] is-length()') {
  @include _assert-equals(true, core.is-length(0));
  @include _assert-equals(false, core.is-length(1));
  @include _assert-equals(true, core.is-length(1px));
  @include _assert-equals(true, core.is-length(1%));
  @include _assert-equals(true, core.is-length(auto));
  @include _assert-equals(false, core.is-length('test'));
  @include _assert-equals(false, core.is-length('1px'));
  @include _assert-equals(true, core.is-length(calc(50% - 10px)));
}

@include _test('[function] is-int()') {
  @include _assert-equals(true, core.is-int(0));
  @include _assert-equals(true, core.is-int(1));
  @include _assert-equals(false, core.is-int(0.5));
  @include _assert-equals(false, core.is-int(-1));
  @include _assert-equals(false, core.is-int(1px));
  @include _assert-equals(false, core.is-int(1%));
  @include _assert-equals(false, core.is-int('test'));
  @include _assert-equals(false, core.is-int('1'));
  @include _assert-equals(false, core.is-int(calc(50% - 10px)));
}

@include _test('[function] is-number()') {
  @include _assert-equals(true, core.is-number(0));
  @include _assert-equals(true, core.is-number(1));
  @include _assert-equals(true, core.is-number(0.5));
  @include _assert-equals(true, core.is-number(-1));
  @include _assert-equals(false, core.is-number(1px));
  @include _assert-equals(false, core.is-number(1%));
  @include _assert-equals(false, core.is-number('test'));
  @include _assert-equals(false, core.is-number('1'));
  @include _assert-equals(false, core.is-number(calc(50% - 10px)));
}

@include _test('[function] is-null()') {
  @include _assert-equals(false, core.is-null(''));
  @include _assert-equals(false, core.is-null(false));
  @include _assert-equals(false, core.is-null(0));
  @include _assert-equals(false, core.is-null('null'));
  @include _assert-equals(true, core.is-null(null));
}

@include _test('[function] min()') {
  @include _assert-equals(map.get(core.$sizes, sm), core.min(sm));
  @include _assert-equals(map.get(core.$sizes, md), core.min(md));
  @include _assert-equals(map.get(core.$sizes, lg), core.min(lg));
  @include _assert-equals(map.get(core.$sizes, xl), core.min(xl));
  @include _assert-equals(false, core.min(dummy));
  @include _assert-equals(0, core.min(0));
  @include _assert-equals(10px, core.min(10px));
  @include _assert-equals(10%, core.min(10%));
  @include _assert-equals(10em, core.min(10em));
}

@include _test('[function] max()') {
  @include _assert-equals(map.get(core.$sizes, md) - .1px, core.max(sm));
  @include _assert-equals(map.get(core.$sizes, lg) - .1px, core.max(md));
  @include _assert-equals(map.get(core.$sizes, xl) - .1px, core.max(lg));
  @include _assert-equals(false, core.max(xl));
  @include _assert-equals(false, core.max(dummy));
  @include _assert-equals(0, core.max(0));
  @include _assert-equals(10px, core.max(10px));
  @include _assert-equals(10%, core.max(10%));
  @include _assert-equals(10em, core.max(10em));
}

@include _test('[function] prev-size-key()') {
  @include _assert-equals(false, core.prev-size-key(sm));
  @include _assert-equals(sm, core.prev-size-key(md));
  @include _assert-equals(md, core.prev-size-key(lg));
  @include _assert-equals(lg, core.prev-size-key(xl));
}

@include _test('[function] next-size-key()') {
  @include _assert-equals(md, core.next-size-key(sm));
  @include _assert-equals(lg, core.next-size-key(md));
  @include _assert-equals(xl, core.next-size-key(lg));
  @include _assert-equals(false, core.next-size-key(xl));
}
