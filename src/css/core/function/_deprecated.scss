/*
---
name: _font-size()
category:
  - core/function
  - core/function/typography
tag:
  - deprecated
---
Return rem font-size

### scss
```scss
//
// @param  int  $scale-or-font-size  Font size scaling factor.
// @return  rem
//

font-size: _font-size(1); // => 16px
```
*/

@function _font-size($scale-or-font-size) {
  @warn '_font-size() is deprecated.';

  @if unitless($scale_or_font-size) {
    $scale: $scale-or-font-size;
    @return $scale * 1rem;
  }

  $font-size: $scale-or-font-size;
  @return _deprecated-font-size($font-size);
}

@function _deprecated-font-size($font-size) {
  $unit: unit($font-size);

  $scale: false;
  @if ('px' == $unit) {
    $scale: $font-size / $_base-font-size-px;
  } @else if ('rem' == $unit) {
    $px: _rem2px($font-size);
    $scale: $px / $_base-font-size-px;
  }
  @return _font-size($scale);
}

/*
---
name: _line-height()
category:
  - core/function
  - core/function/typography
tag:
  - deprecated
---
Return line-height for vertical rhythum

### scss
```scss
//
// @param  int  $scale-or-font-size  Font size scaling factor.
// @return  int
//

.c-foo {
  line-height: _line-height(1); // line-height for 1rem
}
```
*/

@function _line-height($scale-or-font-size) {
  @warn '_line-height() is deprecated.';

  @if unitless($scale-or-font-size) {
    $scale: $scale-or-font-size;
    $new-line-height: calc(.3 + .7 / (1 + #{ $scale } * #{ $scale } / 2.5 - #{ $scale } / 2.5) + var(--_half-leading) * 2);
    @return $new-line-height;
  }

  $font-size: $scale-or-font-size;
  @return _deprecated-line-height($font-size);
}

@function _deprecated-line-height($font-size) {
  $unit: unit($font-size);

  $scale: false;
  @if ('px' == $unit) {
    $scale: $font-size / $_base-font-size-px;
  } @else if ('rem' == $unit) {
    $px: _rem2px($font-size);
    $scale: $px / $_base-font-size-px;
  }

  @return _line-height($scale);
}

/*
---
name: _space()
category:
  - core/function
tag:
  - deprecated
---
Return the margin conforming to the rhythm

* When coefficient is lenght return it as is

### scss
```scss
//
// @param   number   $coefficient
// @param   boolean  $apply-space-scale
// @param   boolean  $apply-margin-scale
// @return  length
//

padding: _space(1);
padding: _space(1, true);
padding: _space(1, true, true);
```
*/

@function _space($coefficient, $apply-space-scale: false, $apply-margin-scale: false) {
  @warn '_space() is deprecated.';

  @if (0 == $coefficient) {
    @return 0;
  }

  @if $apply-space-scale and $apply-margin-scale {
    @return calc(var(--_space) * #{ $coefficient } * var(--_margin-scale));
  } @else if $apply-space-scale {
    @return calc(var(--_space) * #{ $coefficient });
  }

  $margin    : $_base-line-height * $coefficient;
  $add-margin: $_base-line-height * ($_margin-coefficient - 1);
  $space     : $margin + $add-margin;

  @return $space;
}
